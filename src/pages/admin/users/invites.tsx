import { Badge, Button, Container, Group, Stack, Title } from '@mantine/core';
import NextLink from 'next/link';
import { IconUser } from '@tabler/icons';
import type { GetServerSideProps, InferGetServerSidePropsType, NextPage } from 'next';
import Head from 'next/head';
import { openInviteCreateModal } from '../../../components/Admin/Invite/InviteCreateModal';
import { InviteTable } from '../../../components/Admin/Invite/InviteTable';
import { useScreenSmallerThan } from '../../../hooks/useScreenSmallerThan';
import { getServerSideTranslations } from '../../../tools/server/getServerSideTranslations';
import { getServerAuthSession } from '../../../server/auth';
import { prisma } from '../../../server/db';
import { api } from '../../../utils/api';
import { createSSGHelper } from '../../../server/api/ssg-helper';

const Invites: NextPage<InferGetServerSidePropsType<typeof getServerSideProps>> = () => {
  const smallerThanSm = useScreenSmallerThan('sm');

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container>
        <Stack>
          <div>
            <Title>Invites</Title>
            <Title order={4} weight={400}>
              Manage your invites for new users.
            </Title>
          </div>
          <Group grow={smallerThanSm} position="right">
            <UsersButton />
            <Button onClick={openInviteCreateModal}>New invite</Button>
          </Group>
          <InviteTable />
        </Stack>
      </Container>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async (context) => {
  const session = await getServerAuthSession({
    req: context.req,
    res: context.res,
  });

  const currentUser = await prisma?.user.findFirst({
    where: {
      id: session?.user?.id,
    },
  });

  if (!currentUser?.isAdmin) {
    return {
      notFound: true,
    };
  }

  const ssg = await createSSGHelper(context);

  await ssg.invite.list.prefetch();
  await ssg.user.count.prefetch();

  const translations = await getServerSideTranslations(
    ['common', 'form'],
    context.locale,
    context.req,
    context.res
  );

  return { props: { ...translations, trpcState: ssg.dehydrate() } };
};

export default Invites;

const UsersButton = () => {
  const { data: count } = api.user.count.useQuery();

  return (
    <Button
      component={NextLink}
      href="/admin/users"
      variant="default"
      leftIcon={<IconUser size={16} />}
      rightIcon={count === 0 || count === undefined ? null : <Badge>{count}</Badge>}
    >
      Users
    </Button>
  );
};
